
<!-- CSS only -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>

<!-- <div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <form>
                <div class="mb-3">
                  <label for="exampleInputEmail1" class="form-label">Email address</label>
                  <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
                  <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
                </div>
                <div class="mb-3">
                  <label for="exampleInputPassword1" class="form-label">Password</label>
                  <input type="password" class="form-control" id="exampleInputPassword1">
                </div>
                <div class="mb-3">
                    <label  class="form-label">Amount:</label>
                    <input type="text" value="300" class="form-control" id="order-amt" aria-describedby="emailHelp">
                </div>
                <div class="mb-3 form-check">
                  <input type="checkbox" class="form-check-input" id="exampleCheck1">
                  <label class="form-check-label" for="exampleCheck1">Check me out</label>
                </div>
                <button type="submit" id="order-button1" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
</div> -->


<label for="">Amount: </label>
<input type="text" id="order-amt">

<button id="order-button1" type="button" class="btn btn-primary">create Order</button>
<br>
<br>

<script>
    document.getElementById("order-button1").onclick = function(e) {
        var url = "/api/payment/order"
        var params = {
            amount: document.getElementById("order-amt").value * 100,
            currency: "INR",
            receipt: "Akash Trading",
            payment_capture: "1"
        };
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function(res){
            if(xmlHttp.readyState === 4){
                res = JSON.parse(xmlHttp.responseText);
                document.getElementById("rzp-text").value = res.sub.id
            }
        }
        xmlHttp.open("POST",url,true);
        xmlHttp.setRequestHeader("Content-type","application/json");
        xmlHttp.send(JSON.stringify(params));

    }
</script>
<div>
    <br>
    <hr>
    <label for="">Order id: </label>
    <input type="text" name=""  id="rzp-text">
    <br>
</div>
<div class="container mt-3">
    <div class="row">
        <div class="col-md-6">
            <button id="rzp-button1" class="btn btn-primary">Checkout</button>
        </div>
    </div>
</div>
<div id="paymentDetails"></div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.getElementById("rzp-button1").onclick = function(e){
        var options = {
            "key" : "<%= key %>",
            "currency": "INR",
            "name": "Akash Stocks Payment",
            "description": "Akash Transactions",
            "order_id": document.getElementById("rzp-text").value,
            "handler":function(response){
                 document.getElementById("order-pay-id").value = response.razorpay_payment_id;
                 document.getElementById("order-id").value = response.razorpay_order_id;
                 document.getElementById("order-sig").value = response.razorpay_signature;
            },
            "theme" : {
                "color": "#0EB9F2"
            }
        };
        var rzp1 = new Razorpay(options);
        rzp1.open();
        e.preventDefault();
    } 
</script>
<div>
    <label for="">Order id: </label>
    <input type="text" id="order-id">
    <label for="">Payment id:</label>
    <input type="text" id="order-pay-id">
    <label for="">Order signature :</label>
    <input type="text" id="order-sig">
    <br>
</div>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <button id="verify-button1" class="btn btn-primary">Verify</button>
        </div>
    </div>
</div>
<script>
    document.getElementById("verify-button1").onclick = function(e){
        var url = '/api/payment/verify';
        var params = {
            razorpay_order_id: document.getElementById("order-id").value,
            razorpay_payment_id: document.getElementById("order-pay-id").value,
            razorpay_signature: document.getElementById("order-sig").value
        };
        console.log("step-1");
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function(res){
            if(xmlHttp.readyState === 4){
                alert(xmlHttp.responseText);
            }
        }
        xmlHttp.open("POST",url,true);
        xmlHttp.setRequestHeader("content-type", "application/json");
        xmlHttp.send(JSON.stringify(params));
    }
</script>


<!-------app.js------------>

let express = require("express");
const dotenv = require("dotenv");
const cors = require("cors");
const bodyParser = require("body-parser");
const crypto = require("crypto");
const Razorpay = require("razorpay");
// const parser = require("parse");
// var parser = require('parse').Parse;
dotenv.config();
let app = express();
const instance = new Razorpay({
    key_id: process.env.KEY_ID,
    key_secret: process.env.KEY_SECRET
})

//Middleware
app.use(cors())
app.use(express.json())
app.use(
    bodyParser.urlencoded({
        extended : false
    })
);

app.use(bodyParser.json());
app.set("view engine","ejs");

//Rotes
app.get("/payments",(req,res)=>{
    res.render("payment",{key:process.env.KEY_ID});
});

app.post("/api/payment/order",(req,res)=>{
    params = req.body;
    instance.orders
    .create(params)
    .then((data) => {
        res.send({sub: data, status: "success"});
    })
    .catch((error) =>{
        res.send({sub: error, status: "false"});
    });
})

app.post("/api/payment/verify",(req,res) => {
    console.log("error");
    body = req.body.razorpay_order_id + "|" + req.body.razorpay_payment_id;

    var expectedSignature = crypto
    .createHmac("sha256", process.env.KEY_SECRET)
    .update(body.toString())
    .digest("hex");
    console.log("sig" + req.body.razorpay_signature);
    console.log("sig" + expectedSignature);
    var response = { status: "failure"};
    if(expectedSignature == req.body.razorpay_signature)
        response.render('http://127.0.0.1:5500/stocks/sucess.html')
    //   response = {status: "success"};
    res.send(response);
}); 

app.listen("3000",() =>{
    console.log("server started");
}) 